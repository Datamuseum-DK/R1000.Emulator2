
set -e
R1K_TESTNAME=`basename $0 .sh`

R1K_WORKDIR=`make workdir`

R1K_PFX=${R1K_WORKDIR}/_${R1K_TESTNAME}

rm -rf ${R1K_PFX}
mkdir -p ${R1K_PFX}

R1K_CLIFILE=${R1K_PFX}/_.cli

standard_patches() {

	# Set the cluster id to 408459 (= PAM's machine)
	cli firmware patch IOC_EEPROM 0x7e84 0x00 0x06 0x3b 0x8b

	# Dont use "CR ESC [ 2 K" to hide experiment names
	cli dfs patch FS_0.M200 0x8fb7 0x20
	cli dfs patch FS_0.M200 0x8fbd 0x20
	cli dfs patch FS_0.M200 0x827e 0x40 0x0a 0x0d

	# Poll experiment completion four times more often
	cli 'dfs patch FS_0.M200 0x93c6 0x00 0x14'

	# Allow operator to enter CLI immediately [N] ? y
	# cli dfs patch STANDARD.M200_CONFIG 0x3 0x1

	# Allow operator to enter CLI prior to starting the cluster [N] ? y
	# cli dfs patch STANDARD.M200_CONFIG 0x5 0x1

	# Wait for remote debugging on kernel crashes [Y] ? n
	cli dfs patch STANDARD.M200_CONFIG 0x2a 0x0

	# Call Rational on kernel crash [Y] ? n
	cli dfs patch STANDARD.M200_CONFIG 0x2d 0x0

	# Single MEM32 board
	cli dfs patch HARDWARE.M200_CONFIG 0x05 0x0

	# Speed up DELAY_LOOP(D1)
	# 	00005d16 20 3c 00 00 05 00          MOVE.L  #0x00000500,D0
	# 	00005d16 20 3c 00 00 00 20          MOVE.L  #0x00000020,D0
	cli dfs patch KERNEL_0.M200 0x00005d18 0x00 0x00 0x00 0x20

	# Speed up INIT_KERNEL_10_VME
	#	000066d0 20 3c 00 23 7c 4d     MOVE.L  #0x00237c4d,D0
	#	000066d0 20 3c 00 00 00 20     MOVE.L  #0x00000020,D0
	cli dfs patch KERNEL_0.M200 0x000066d2 0x00 0x00 0x00 0x20

	# Speed up INIT_KERNEL_07
	#	00009af6 20 3c 00 07 ff ff          MOVE.L  #0x0007ffff,D0
	#	00009af6 20 3c 00 00 00 20          MOVE.L  #0x00000020,D0
	cli dfs patch KERNEL_0.M200 0x00009af8 0x00 0x00 0x00 0x20
	#	00009b56 30 3c 7f ff                MOVE.W  #0x7fff,D0
	#	00009b56 30 3c 00 20                MOVE.W  #0x0020,D0
	cli dfs patch KERNEL_0.M200 0x00009b58 0x00 0x20

	# Speed up SCSI operations
	#	00009818 20 3c 00 03 ff ff          MOVE.L  #0x0003ffff,D0
	#	00009818 20 3c 00 00 04 00          MOVE.L  #0x00000400,D0
	cli dfs patch KERNEL_0.M200 0x0000981a 0x00 0x00 0x04 0x00
}

cli() {
	echo "$*" >> ${R1K_CLIFILE}
}

cli '# => Standard prefix'

make diskcli | while read i
do
	cli "$i"
done

cli 'console >' ${R1K_PFX}/_.console
cli 'modem >' ${R1K_PFX}/_.modem
cli 'console telnet localhost:1400'
cli 'modem telnet localhost:1416'

standard_patches

sc_boards() {
	cli r1000 launch
	cli diproc dummy mem0
	cli diproc dummy -TIMEOUT mem1
	cli diproc dummy -TIMEOUT mem2
	cli diproc dummy -TIMEOUT mem3
	cli diproc dummy typ
	cli diproc dummy val
	cli diproc dummy ioc
	cli diproc dummy seq
	cli diproc dummy fiu
	cli 'r1000 watchdog -dont_bite 2' 
}

cli_prompt() {
	# cli 'r1000 trace DI*PROC 0x14'
	cli 'trace +console'
	cli 'trace +diagbus'
	cli "iop syscall"  
	# cli "r1000 trace DUIRG 1"

	cli 'r1000 wait .00001'
	cli '# => cli_prompt'
	cli iop reset
	cli 'console match expect "Boot from (Tn or Dn)  [D0] : "'
	cli 'console << ""'
	cli 'console match expect "Kernel program (0,1,2) [0] : "'
	cli 'console << ""'
	cli 'console match expect "File system    (0,1,2) [0] : "'
	cli 'console << ""'
	cli 'console match expect "User program   (0,1,2) [0] : "'
	cli 'console << ""'
	cli 'console match expect "Enter option [enter CLI] : "'
	cli 'console << "1"'
	cli 'console match expect "CLI>"'
}

fru_prompt() {
	cli_prompt
	cli '# => fru_prompt'
	cli 'console << "x fru"'
	cli 'console match expect "Please enter option : "'
	for i in $*
	do
		cli "console << $i"
		cli 'console match expect " : "'
	done
}

run_with_cli() {
	cli 'r1000 wait 1e-6'
	cli r1000 rate
	./r1000sim \
		-T ${R1K_PFX}/_.trace \
		"include ${R1K_CLIFILE}" 2>&1 | tee ${R1K_PFX}/_.log
}

run() {
	cli 'r1000 wait 1e-6'
	cli r1000 rate
	cli exit
	echo "exit" | ./r1000sim \
		-T ${R1K_PFX}/_ \
		"include ${R1K_CLIFILE}" 2>&1 | tee ${R1K_PFX}/_.log
}

single() {
	single_brd=$1
	shift

        if [ "x${single_brd}" = "xmem0" ] ; then
		single_suff="m32"
		cli 'r1000 trace DFSM 1'
	else
		single_suff="${single_brd}"
		cli 'r1000 trace DUIRG 1'
	fi


	if [ "x$1" == "x" ] ; then
		set TEST_WCS_ADDRESS
	fi

	#cli 'r1000 trace DI*PROC 0x14'

	cli 'r1000 quota add 60'
	cli 'r1000 quota exit'

        for EXP in $*
	do
		cli "dfs read ${EXP}.${single_suff} ${R1K_PFX}.exp"
		cli "diproc experiment ${single_brd} ${R1K_PFX}.exp"
		cli "diproc wait ${single_brd}"
		cli "diproc status ${single_brd}"
	done

	run
}
